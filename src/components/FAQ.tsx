'use client';

import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface FAQItem {
  question: string;
  answer: string;
}

const faqs: FAQItem[] = [
  {
    question: "What is VibeForge?",
    answer: "VibeForge is an AI-powered music generator that creates personalized soundscapes based on your emotions and vibe. Using advanced AI technology powered by Kie.ai, it generates unique instrumental music tailored to your mood in seconds."
  },
  {
    question: "How does VibeForge work?",
    answer: "Simply describe your emotion or vibe, and our AI music generator creates a custom soundscape for you. The AI analyzes your input and generates original instrumental music with matching artwork in about 1-2 minutes."
  },
  {
    question: "Is VibeForge free to use?",
    answer: "Yes! VibeForge is completely free to use. No account required, no credit card needed. Just visit the site and start creating AI-generated music."
  },
  {
    question: "What is an AI music generator?",
    answer: "An AI music generator uses artificial intelligence and machine learning to create original music. VibeForge specializes in creating ambient soundscapes and instrumental music based on emotional cues and text prompts."
  },
  {
    question: "Can I use the generated music commercially?",
    answer: "The music generated by VibeForge is created using AI and may be subject to the terms of service of our AI provider (Kie.ai). We recommend checking their licensing terms for commercial use."
  },
  {
    question: "How long does it take to generate music?",
    answer: "Music generation typically takes 1-2 minutes. You'll receive a notification when your AI-generated soundtrack is ready to play."
  },
  {
    question: "Can I download the generated music?",
    answer: "Currently, you can play the generated music directly in your browser. Download functionality may be added in future updates."
  },
  {
    question: "What makes VibeForge different from other AI music generators?",
    answer: "VibeForge focuses on creating personalized emotional soundscapes with matching AI-generated artwork. It's completely free, requires no sign-up, and generates music in seconds based on your specific vibe or emotion."
  }
];

// Generate FAQ Schema.org structured data
export const faqSchema = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": faqs.map(faq => ({
    "@type": "Question",
    "name": faq.question,
    "acceptedAnswer": {
      "@type": "Answer",
      "text": faq.answer
    }
  }))
};

export default function FAQ() {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  return (
    <>
      {/* FAQ Schema.org structured data */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(faqSchema) }}
      />
      
      <div className="mt-16 space-y-4">
        <h2 className="text-3xl font-light text-white mb-8 text-center">
          Frequently Asked Questions
        </h2>
        
        {faqs.map((faq, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: index * 0.1 }}
            className="bg-white/10 backdrop-blur-lg rounded-2xl border border-white/20 overflow-hidden"
          >
            <button
              onClick={() => setOpenIndex(openIndex === index ? null : index)}
              className="w-full px-6 py-4 text-left flex items-center justify-between hover:bg-white/5 transition-colors"
            >
              <span className="text-white font-medium">{faq.question}</span>
              <motion.svg
                animate={{ rotate: openIndex === index ? 180 : 0 }}
                transition={{ duration: 0.3 }}
                className="w-5 h-5 text-white flex-shrink-0"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
              </motion.svg>
            </button>
            
            <AnimatePresence>
              {openIndex === index && (
                <motion.div
                  initial={{ height: 0, opacity: 0 }}
                  animate={{ height: 'auto', opacity: 1 }}
                  exit={{ height: 0, opacity: 0 }}
                  transition={{ duration: 0.3 }}
                  className="overflow-hidden"
                >
                  <div className="px-6 py-4 text-gray-300">
                    {faq.answer}
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </motion.div>
        ))}
      </div>
    </>
  );
}

